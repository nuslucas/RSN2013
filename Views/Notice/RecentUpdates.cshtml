@*@model FollowPeers.Models.UserProfile
@{
    ViewBag.Title = "RecentUpdates";
    
       
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    string name = Membership.GetUser().UserName;
    FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
    FollowPeers.Models.Update peerupdates;
    int i =0;
    List<FollowPeers.Models.Relationship> following = followPeersDB.Relationships.Where(p => p.personAName == Model.UserName && p.tier == 2).ToList();
    List<FollowPeers.Models.UserProfile> peerprofile = new List<FollowPeers.Models.UserProfile>();
    

    if(Model.UserProfileId == myprofile.UserProfileId)
    {
         DateTime curr = System.DateTime.Now;
        peerupdates = followPeersDB.Updates.Where(p => p.owner != Model.UserProfileId).OrderByDescending(o => o.Time).First(t => t.Time.CompareTo(curr) < 0);
        var newList = peerupdates;
   foreach (var currentUpdate in newList)
                    {
                        //need to display only own's updates
                        if (currentUpdate.Own == true)
                        {

                            UserProfile userprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == currentUpdate.owner);
                    <div style="border-bottom: 1px solid #eee; margin: 10px 0px; padding-bottom: 5px;">
                        <div style="float: left; height: 50px; overflow: hidden;">
                            <a href="../../Profile/Index/@userprofile.UserProfileId">
                                <img src="@Html.Encode(userprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:50px;"/></a>
                        </div>
                        <div style="margin-left: 8px; float: left; width: 88%;">
                            <a href="/Profile/Index/@userprofile.UserProfileId"><b>@userprofile.FirstName @userprofile.LastName</b></a><br />
                            @if (currentUpdate.type == 3)
                            {
                                //  <text>@currentUpdate.message @currentUpdate.UpdateId @Model.UserProfileId </text>
                                NoticeComment tempcomment = followPeersDB.NoticeComments.SingleOrDefault(p => p.commenterId == Model.UserProfileId && p.message == currentUpdate.message);
                                <text>@tempcomment.message</text>
                                Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.UpdateId == tempcomment.update.UpdateId);
                                // UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempupdate.owner);
                                UserProfile tempprofile = tempupdate.UserProfiles.ElementAt(0);
                                <text>Commented: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                                  <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                            }
                            else if (currentUpdate.type == 4)
                            {
                                Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.message == currentUpdate.message && p.type == 5);
                                int tempuserprofileID = tempupdate.UserProfiles.ElementAt(0).UserProfileId;
                                UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempuserprofileID);
                              
                                <text>Wrote: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                                  <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                            }
                            else if (currentUpdate.type == 9)
                            {
                                <span class="label label-info">Broadcast</span> <br /> @currentUpdate.message
                            }
                            else
                            {@currentUpdate.message}
                            <br />

                            @{
                            string id1 = "comment1" + @count;
                            string time = "";
                            TimeSpan temp = DateTime.Now - currentUpdate.Time;
                            if (temp.Days > 1) { time += temp.Days.ToString() + " days ago"; }
                            else if (temp.Hours > 1) { time += temp.Hours.ToString() + " hrs ago"; }
                            else { time += temp.Minutes.ToString() + " mins ago"; }
                            }
                            <text style="color: #777">@time </text>

                            @{                      
                            //if it is a comment on other people's wall, dont allow commenting
                            if (currentUpdate.type != 3 && currentUpdate.type != 4)
                            {
                                <div style="background: #eee; padding: 5px 3px; margin-bottom: 5px;">
                                    @{var commentslist = followPeersDB.NoticeComments.OrderBy(x => x.time);
                                    }
                                    @{foreach (NoticeComment cmt in commentslist)
                                      {
                                          if (cmt.update.UpdateId == currentUpdate.UpdateId)
                                          {   <div style="border-bottom: 1px solid #ddd;">
                                                  @{
                                              IQueryable<UserProfile> custQuery2 = from cust in followPeersDB.UserProfiles where cust.UserProfileId == cmt.commenterId select cust;
                                              foreach (UserProfile user in custQuery2)
                                              {
                                                      <div style="float: left; margin: 3px; height: 30px; overflow: hidden;">
                                                          <img src="@Html.Encode(user.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:30px;"/>
                                                      </div>
                                                      <div style="margin-left: 8px; float: left;">
                                                          <a href="/Profile/Index/@user.UserProfileId"><b>@user.FirstName @user.LastName</b></a><text> @cmt.message </text>
                                                      </div>
                                      
                                                  if (user.UserProfileId == myprofile.UserProfileId)
                                                  {<div id="mydiv" style="float: right; margin-right: 5px; color: #888; font-size: 15px; cursor: pointer;">@Html.ActionLink("x", "DeleteComment", "Notice", new { id = cmt.NoticeCommentId, redirect = Model.UserProfileId }, null)
                                                      </div>}
                                                      <div style="clear: both;">
                                                      </div>
                                              }
                                                  }
                                              </div>
                                          } //end of if
                                      }
                                    }
                                    <form action="/Profile/AddComment" method="post" style="margin-bottom: 0px;">
                                        <input type="hidden" name="commentid" value="@currentUpdate.UpdateId" />
                                        <input type="hidden" name="redirect" value="@Model.UserProfileId" />
                                        @{string id = "comment" + @count;}
                                        <input id="@id" type="text" name="message" value="" style="width:97%;" />
                                    </form>
                                    <script type="text/javascript" language="javascript"> puthint("#@id", "Write a comment...");</script>
                                    @{count++;}
                                </div>}
                            }
                        </div>
                        <div style="clear: both;">
                        </div>
                    </div>
                        }


                    }
                }


		      <script src="Scripts/bootstrap.js"></script>

}
}

*@


@model FollowPeers.Models.UserProfile
@{
    ViewBag.Title = "RecentUpdates";
    
       
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    string name = Membership.GetUser().UserName;
    FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
    FollowPeers.Models.Update peerupdates;
    int i =0;
    List<FollowPeers.Models.Relationship> following = followPeersDB.Relationships.Where(p => p.personAName == Model.UserName && p.tier == 2).ToList();
    List<FollowPeers.Models.UserProfile> peerprofile = new List<FollowPeers.Models.UserProfile>();
    

    if(Model.UserProfileId == myprofile.UserProfileId)
    {
      <h5>Recent Updates</h5>
       
    DateTime curr = System.DateTime.Now;
      <ul> 
@do
 {

    int countupdate = followPeersDB.Updates.Where(p => p.owner != Model.UserProfileId && p.Time.CompareTo(curr) < 0).Count();
        if(countupdate > 0)
        {
        peerupdates = followPeersDB.Updates.Where(p => p.owner != Model.UserProfileId).OrderByDescending(o => o.Time).First(t => t.Time.CompareTo(curr) < 0);
        curr = peerupdates.Time;
        }
        else 
        {
            if(i == 0)
            {
            <p>No updates from the peers you follow.</p>
            }
            break;
        }
       
       
        FollowPeers.Models.UserProfile OwnerProfile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == peerupdates.owner);
        foreach( var peer in following)
        {
            if (peer.personBName == OwnerProfile.UserName)
            {
             
           
      
        string pronoun = "";
        string gender = "";
        string OwnerName = "Anonymous";
        if (OwnerProfile.Gender != null)
        {
            gender = OwnerProfile.Gender.ToLower();
        }
        if (gender.Equals("male"))
        {
            pronoun = "his";
        }
        else
            if (gender.Equals("female"))
            {
                pronoun = "her";
            }
            else
            {
                pronoun = "their";
            }
        if (OwnerProfile.FirstName != null)
        {
            OwnerName = OwnerProfile.FirstName;
        }
   
       if (peerupdates.type == 2 && peerupdates.Own == true)
        {
            i++;
          
        <li> <a href="@Url.Content("~/Profile/Index/?id=" + @OwnerProfile.UserProfileId)">@OwnerName</a> shared a post on @pronoun
        <a href="@Url.Content("~/Notice/Index/?id=" + @OwnerProfile.UserProfileId)">noticeboard</a></li>
        }
        else
            if (peerupdates.type == 1)
            {
                i++;
                <li><a href= "@Url.Content("~/Profile/Index/?id=" + @OwnerProfile.UserProfileId)">@OwnerName</a> made changes to @pronoun profile. @peerupdates.message</li>      
            }
            else
                if (peerupdates.type == 6)
                {
                    i++;
             <li><a href="@Url.Content("~/Profile/Index/?id=" + @OwnerProfile.UserProfileId)">@OwnerName</a> has @peerupdates.message.ToLower()</li>
                }
                else
                if (peerupdates.type == 10)
                {
                    i++;
                    string msg = peerupdates.message;
                    int comma_index = peerupdates.message.IndexOf(",");
                    if (comma_index < 0) { comma_index = 0; }
                     <li><a href="@Url.Content("~/Profile/Index/?id=" + @OwnerProfile.UserProfileId)">@OwnerName</a> liked <a href="@Url.Content(@peerupdates.link)">@peerupdates.message.Substring(0, comma_index)'s</a> achievement titled @peerupdates.message.Substring(comma_index+1).</li>
                    
                }
            
                     else if(peerupdates.type == 8) 
                {
                    i++;
                         string msg = peerupdates.link;
                    int comma_index = peerupdates.link.IndexOf(",");
                    if (comma_index < 0) { comma_index = 0; }
                     <li><a href="@Url.Content("~/Profile/Index/?id=" + @Convert.ToInt16(peerupdates.link.Substring(0, comma_index)))">@peerupdates.link.Substring(comma_index+1) </a> was  tagged in a post by <a href="@Url.Content("~/Profile/Index/?id=" + @OwnerProfile.UserProfileId)">@OwnerName</a></li>
                
                }
                else {
                }

                }
                }
              



                  } while (peerupdates.Time < System.DateTime.Now);
              </ul>
               
		      <script src="Scripts/bootstrap.js"></script>

}
}



