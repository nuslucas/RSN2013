@model FollowPeers.Models.UserProfile
@using FollowPeers.Models;

@*Page Header*@
@Html.Partial("_Header")


@*Container*@
<div class="container">

    @*rows within container*@
    <div class="row">

        @*Left Sidebar*@
        @{
            ViewBag.Title = Model.FirstName + " " + Model.LastName + "'s Notice Board";
            FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
            string name = Membership.GetUser().UserName;
            FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
            if (Model.UserProfileId == myprofile.UserProfileId)
            {
            @Html.Partial("_SideBar1", new ViewDataDictionary { { "Name", myprofile.FirstName + " " + myprofile.LastName } })
            }
            else
            {
            @Html.Partial("_SideBar1", new ViewDataDictionary { { "PhotoUrl", @Model.PhotoUrl }, { "ProfileName", @Model.UserProfileId }, { "Name", @Model.FirstName + " " + Model.LastName } })
 
            } 
        }
        @*Center Container*@
        <div class="span7 main-content">
            <div class="box" style="overflow: auto; min-height: 200px; height: auto;">
                <script type="text/javascript" language="javascript">
                    function puthint(divname, hinttext) {
                        $(document).ready(function () {

                            // Define what happens when the textbox comes under focus
                            // Remove the watermark class and clear the box
                            $(divname).focus(function () {

                                $(this).filter(function () {

                                    // We only want this to apply if there's not 
                                    // something actually entered
                                    return $(this).val() == "" || $(this).val() == hinttext

                                }).removeClass("watermarkOn").val("");

                            });

                            // Define what happens when the textbox loses focus
                            // Add the watermark class and default text
                            $(divname).filter(function () {

                                // We only want this to apply if there's not
                                // something actually entered
                                return $(this).val() == ""

                            }).addClass("watermarkOn").val(hinttext);

                            $(divname).blur(function () {

                                $(this).filter(function () {

                                    // We only want this to apply if there's not
                                    // something actually entered
                                    return $(this).val() == ""

                                }).addClass("watermarkOn").val(hinttext);

                            });

                        });
                    }
                    puthint("#message", "Update your status message...");
                    puthint("#posttonotice", "Write something on the @Model.FirstName @Model.LastName's Noticeboard...");
        
                </script>


                <!--ul class="nav nav-tabs">
                            <li><h5><i class="icon-file"></i> Update Status</h5></li>
                            <li><h5><span class="icon-upload" href="/Profile/UploadFile"></span> Upload File</h5></li>
              
                        </!--ul-->

                <h5><i class="icon-file"></i>Update Status</h5>


                @{
                    int count = 0;

                    //post status form
                    if (myprofile.UserProfileId == Model.UserProfileId)
                    {
                    <form action="/Profile/UpdateStatus" method="post">
                        <div>
                            <div class="input-append">
                                <input id="appendedInputButton" name="message" type="text" value="" style="width: 78%;" />

                                <input class="btn" type="submit" value="Post" />
                                <a class="btn" href="/Profile/UploadFile"><i class="icon-upload"></i></a>
                                <br />
                                <br />
                                <!--label type="checkbox">
                                            <span class="label label-info" style="padding: 5px">Broadcast this post?</span>
                                            <input type="checkbox" id="Ischecked" value="true" name="Ischecked" style="padding-left: 100px" />
                                        </!--label-->
                                <input type="hidden" name="Ischecked" value="false" />
                            </div>
                        </div>
                    </form>
            
                    }
                    else
                    {

                        bool allowPostonWall = false;

                        string membername = Membership.GetUser().UserName;

                        IQueryable<int> custQuery = from cust in followPeersDB.Relationships where cust.personAName == membername && cust.personBName == Model.UserName select cust.tier;
                        if (custQuery.Count() != 0)
                        {
                            foreach (int tier in custQuery)
                            {
                                FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == tier);
                                if (temp.Noticeboard == 1) { allowPostonWall = true; }

                            }
                        }
                        //else (meaning public view.. so check tier 1)
                        else
                        {
                            FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == 1);
                            if (temp.Noticeboard == 1) { allowPostonWall = true; }

                        }
                        if (allowPostonWall == true)
                        {
                    <form action="/Profile/PosttoNoticeBoard" method="post">
                        <textarea rows="2" cols="120" id="posttonotice" name="message" type="text" value=""
                            style="width: 100%;"></textarea>
                        <input type="hidden" name="redirect" value="@Model.UserProfileId" />
                        <input type="submit" title="Write something on @Model.FirstName's Notice Board..." style="cursor: pointer; float: right;
                                        padding: 2px 5px;" value="Post">
                    </form>
                        }
                    }
                }





                @* 02/07 version: recent updates *@
                @{
                    //L: updates from people you are following.

                    FollowPeers.Models.Update peerupdates;
                    List<FollowPeers.Models.Relationship> following = followPeersDB.Relationships.Where(p => p.personAName == Model.UserName && p.tier == 2).ToList();
                    //List<FollowPeers.Models.UserProfile> peerprofile = new List<FollowPeers.Models.UserProfile>();

                    if (Model.UserProfileId == myprofile.UserProfileId)
                    {
                    <h5>Recent Updates</h5>
                    
                    
                    
                                                       
                  
       
                    DateTime curr = System.DateTime.Now;
                    int i = 0;

                        <!-- Nav tabs -->
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#all" data-toggle="tab">All</a></li>
                        <li><a href="#status" data-toggle="tab">Status</a></li>
                        <li><a href="#publication" data-toggle="tab">Publications</a></li>
                        <li><a href="#course" data-toggle="tab">Courses</a></li>
                        <li><a href="#job" data-toggle="tab">Jobs</a></li>
                        <li><a href="#favourite" data-toggle="tab">Favourite</a></li>
                    </ul>

                    <!-- Tab panes -->
                    <div class="tab-content">


                        @* updates of all updates *@
                        <div class="tab-pane active" id="all">                                          
                        @{do
                        {

                            int countupdate = followPeersDB.Updates.Where(p => p.owner != Model.UserProfileId && p.Time.CompareTo(curr) < 0).Count();
                            if (countupdate > 0)
                            {
                                peerupdates = followPeersDB.Updates.Where(p => p.owner != Model.UserProfileId).OrderByDescending(o => o.Time).First(t => t.Time.CompareTo(curr) < 0);
                                curr = peerupdates.Time;
                            }
                            else
                            {
                                if (i == 0)
                                {
                    <br />
                                }
                                break;
                            }

                            //L: identify the owner of updates.
                            FollowPeers.Models.UserProfile OwnerProfile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == peerupdates.owner);
                            foreach (var peer in following)
                            {
                                if (peer.personBName == OwnerProfile.UserName)
                                {
                                    //L: display all updates except type 3(comments)
                                    if (peerupdates.Own == true && peerupdates.type != 3)
                                    {

                                        UserProfile userprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == peerupdates.owner);
                    <div style="border-bottom: 1px solid #eee; margin: 10px 0px; padding-bottom: 5px;">
                        <div style="float: left; height: 50px; overflow: hidden;">
                            <a href="../../Profile/Index/@userprofile.UserProfileId">
                                <img src="@Html.Encode(userprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:50px;"/></a>
                        </div>
                        <div style="margin-left: 8px; float: left; width: 88%;">
                            <a href="/Profile/Index/@userprofile.UserProfileId"><b>@userprofile.FirstName @userprofile.LastName</b></a><br />
                            @if (peerupdates.type == 4)
                            {
                                Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.message == peerupdates.message && p.type == 5);
                                int tempuserprofileID = tempupdate.UserProfiles.ElementAt(0).UserProfileId;
                                UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempuserprofileID);
                              
                                <text>Wrote: </text>@peerupdates.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                                          <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                            }
                            else if (peerupdates.type == 9)
                            {
                                <span class="label label-info">Broadcast</span> <br /> @peerupdates.message
                            }
                            else
                            {@peerupdates.message}
                            <br />

                            @{
                            string id1 = "comment1" + @count;
                            string time = "";
                            TimeSpan temp = DateTime.Now - peerupdates.Time;
                            if (temp.Days > 1) { time += temp.Days.ToString() + " days ago"; }
                            else if (temp.Hours > 1) { time += temp.Hours.ToString() + " hrs ago"; }
                            else { time += temp.Minutes.ToString() + " mins ago"; }
                            }
                            <text style="color: #777">@time </text>

                            @{                      
                            //if it is a comment on other people's wall, dont allow commenting
                            if (peerupdates.type != 3 && peerupdates.type != 4)
                            {
                                <div style="background: #eee; padding: 5px 3px; margin-bottom: 5px;">
                                    @{var commentslist = followPeersDB.NoticeComments.OrderBy(x => x.time);
                                    }
                                    @{foreach (NoticeComment cmt in commentslist)
                                      {
                                          if (cmt.update.UpdateId == peerupdates.UpdateId)
                                          {   <div style="border-bottom: 1px solid #ddd;">
                                                  @{
                                              IQueryable<UserProfile> custQuery2 = from cust in followPeersDB.UserProfiles where cust.UserProfileId == cmt.commenterId select cust;
                                              foreach (UserProfile user in custQuery2)
                                              {
                                                      <div style="float: left; margin: 3px; height: 30px; overflow: hidden;">
                                                          <img src="@Html.Encode(user.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:30px;"/>
                                                      </div>
                                                      <div style="margin-left: 8px; float: left;">
                                                          <a href="/Profile/Index/@user.UserProfileId"><b>@user.FirstName @user.LastName</b></a><text> @cmt.message </text>
                                                      </div>
                                      
                                                  if (user.UserProfileId == myprofile.UserProfileId)
                                                  {<div id="mydiv" style="float: right; margin-right: 5px; color: #888; font-size: 15px; cursor: pointer;">@Html.ActionLink("x", "DeleteComment", "Notice", new { id = cmt.NoticeCommentId, redirect = Model.UserProfileId }, null)
                                                      </div>}
                                                      <div style="clear: both;">
                                                      </div>
                                              }
                                                  }
                                              </div>
                                          } //end of if
                                      }
                                    }
                                    <form action="/Profile/AddComment" method="post" style="margin-bottom: 0px;">
                                        <input type="hidden" name="commentid" value="@peerupdates.UpdateId" />
                                        <input type="hidden" name="redirect" value="@Model.UserProfileId" />
                                        @{string id = "comment" + @count;}
                                        <input id="@id" type="text" name="message" value="" style="width:97%;" />
                                    </form>
                                    <script type="text/javascript" language="javascript"> puthint("#@id", "Write a comment...");</script>
                                    @{count++;}
                                </div>}
                            }
                        </div>
                        <div style="clear: both;">
                        </div>
                    </div>

                            
                                    }
                                }
                            }

                        } while (peerupdates.Time < System.DateTime.Now);
                }
                </div>


                @* updates of ststus *@
                <div class="tab-pane" id="status">
                     @{do
                        {

                            int countupdate = followPeersDB.Updates.Where(p => p.owner != Model.UserProfileId && p.Time.CompareTo(curr) < 0).Count();
                            if (countupdate > 0)
                            {
                                peerupdates = followPeersDB.Updates.Where(p => p.owner != Model.UserProfileId).OrderByDescending(o => o.Time).First(t => t.Time.CompareTo(curr) < 0);
                                curr = peerupdates.Time;
                            }
                            else
                            {
                                if (i == 0)
                                {
                    <br />
                                }
                                break;
                            }

                            //L: identify the owner of updates.
                            FollowPeers.Models.UserProfile OwnerProfile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == peerupdates.owner);
                            foreach (var peer in following)
                            {
                                if (peer.personBName == OwnerProfile.UserName)
                                {
                                    //L: display all updates except type 3(comments)
                                    if (peerupdates.Own == true && peerupdates.type != 3)
                                    {

                                        UserProfile userprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == peerupdates.owner);
                    <div style="border-bottom: 1px solid #eee; margin: 10px 0px; padding-bottom: 5px;">
                        <div style="float: left; height: 50px; overflow: hidden;">
                            <a href="../../Profile/Index/@userprofile.UserProfileId">
                                <img src="@Html.Encode(userprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:50px;"/></a>
                        </div>
                        <div style="margin-left: 8px; float: left; width: 88%;">
                            <a href="/Profile/Index/@userprofile.UserProfileId"><b>@userprofile.FirstName @userprofile.LastName</b></a><br />
                            @if (peerupdates.type == 4)
                            {
                                Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.message == peerupdates.message && p.type == 5);
                                int tempuserprofileID = tempupdate.UserProfiles.ElementAt(0).UserProfileId;
                                UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempuserprofileID);
                              
                                <text>Wrote: </text>@peerupdates.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                                          <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                            }
                            else if (peerupdates.type == 9)
                            {
                                <span class="label label-info">Broadcast</span> <br /> @peerupdates.message
                            }
                            else
                            {@peerupdates.message}
                            <br />

                            @{
                            string id1 = "comment1" + @count;
                            string time = "";
                            TimeSpan temp = DateTime.Now - peerupdates.Time;
                            if (temp.Days > 1) { time += temp.Days.ToString() + " days ago"; }
                            else if (temp.Hours > 1) { time += temp.Hours.ToString() + " hrs ago"; }
                            else { time += temp.Minutes.ToString() + " mins ago"; }
                            }
                            <text style="color: #777">@time </text>

                            @{                      
                            //if it is a comment on other people's wall, dont allow commenting
                            if (peerupdates.type != 3 && peerupdates.type != 4)
                            {
                                <div style="background: #eee; padding: 5px 3px; margin-bottom: 5px;">
                                    @{var commentslist = followPeersDB.NoticeComments.OrderBy(x => x.time);
                                    }
                                    @{foreach (NoticeComment cmt in commentslist)
                                      {
                                          if (cmt.update.UpdateId == peerupdates.UpdateId)
                                          {   <div style="border-bottom: 1px solid #ddd;">
                                                  @{
                                              IQueryable<UserProfile> custQuery2 = from cust in followPeersDB.UserProfiles where cust.UserProfileId == cmt.commenterId select cust;
                                              foreach (UserProfile user in custQuery2)
                                              {
                                                      <div style="float: left; margin: 3px; height: 30px; overflow: hidden;">
                                                          <img src="@Html.Encode(user.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:30px;"/>
                                                      </div>
                                                      <div style="margin-left: 8px; float: left;">
                                                          <a href="/Profile/Index/@user.UserProfileId"><b>@user.FirstName @user.LastName</b></a><text> @cmt.message </text>
                                                      </div>
                                      
                                                  if (user.UserProfileId == myprofile.UserProfileId)
                                                  {<div id="mydiv" style="float: right; margin-right: 5px; color: #888; font-size: 15px; cursor: pointer;">@Html.ActionLink("x", "DeleteComment", "Notice", new { id = cmt.NoticeCommentId, redirect = Model.UserProfileId }, null)
                                                      </div>}
                                                      <div style="clear: both;">
                                                      </div>
                                              }
                                                  }
                                              </div>
                                          } //end of if
                                      }
                                    }
                                    <form action="/Profile/AddComment" method="post" style="margin-bottom: 0px;">
                                        <input type="hidden" name="commentid" value="@peerupdates.UpdateId" />
                                        <input type="hidden" name="redirect" value="@Model.UserProfileId" />
                                        @{string id = "comment" + @count;}
                                        <input id="@id" type="text" name="message" value="" style="width:97%;" />
                                    </form>
                                    <script type="text/javascript" language="javascript"> puthint("#@id", "Write a comment...");</script>
                                    @{count++;}
                                </div>}
                            }
                        </div>
                        <div style="clear: both;">
                        </div>
                    </div>

                            
                                    }
                                }
                            }

                        } while (peerupdates.Time < System.DateTime.Now);
                }         
                </div>


                @* updates of publication *@
                <div class="tab-pane" id="publication">
2
     
                </div>


                @* updates of course *@
                <div class="tab-pane" id="course">


                </div>


                @* updates of job *@
                <div class="tab-pane" id="job">


                </div>


                @* updates of favourite peers*@
                <div class="tab-pane" id="favourite">


                </div>    

            </div> 
            }
            }
            </div>

        </div>

        @*Right Sidebar: peer list on right side bar*@
        <div class="peerlist" style="width: auto; float: right">


            @{
                Boolean click_flag = false;

                foreach (var peer in following)
                {
                    DateTime curr1 = System.DateTime.Now;
                    int peerupdate_count = 0;
                    FollowPeers.Models.UserProfile peerprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == peer.personBName);

                    if (!click_flag)
                    {
                        peerupdate_count = followPeersDB.Updates.Where(p => p.owner == peerprofile.UserProfileId && p.Time.CompareTo(curr1) < 0).Count();
                    }
                              
                <a href="/Profile/Index/@peerprofile.UserProfileId" style="text-decoration:none;">
                    <div style=" padding: 2px 6px 2px 10px; line-height: 40px; height: 60px; background: #FFF; vertical-align: top; clear: both; _padding-right: 0px;">
                        <span class="label label-warning pull-left">@peerupdate_count</span>
                        <img src="@Html.Encode(peerprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:35px; height:35px;" class="img-circle" />                                <b>&nbsp;@peerprofile.FirstName @peerprofile.LastName</b>  
                    </div>
                </a>
       
                
                }
               }


        </div>










    </div>
    <div class="row">
        @Html.Partial("_Footer")
    </div>
</div>


@*Scripts*@
<script src="scripts/jquery.js"></script>
<script src="Scripts/bootstrap-dropdown.js"></script>
<script src="Scripts/bootstrap.js"></script>
<script>
    $('.dropdown-toggle').dropdown()
</script>
<script>
    $('#navbar').scrollspy()
</script>
<script src="scripts/bootstrap-fileupload.js"></script>
<script>

    $('.fileupload').fileupload()
</script>
